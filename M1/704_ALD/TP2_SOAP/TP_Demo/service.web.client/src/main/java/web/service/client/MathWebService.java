
package web.service.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MathWebService", targetNamespace = "http://service.web/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MathWebService {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://service.web/", className = "web.service.client.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://service.web/", className = "web.service.client.AddResponse")
    @Action(input = "http://service.web/MathWebService/addRequest", output = "http://service.web/MathWebService/addResponse")
    public int add(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "divide", targetNamespace = "http://service.web/", className = "web.service.client.Divide")
    @ResponseWrapper(localName = "divideResponse", targetNamespace = "http://service.web/", className = "web.service.client.DivideResponse")
    @Action(input = "http://service.web/MathWebService/divideRequest", output = "http://service.web/MathWebService/divideResponse")
    public int divide(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiply", targetNamespace = "http://service.web/", className = "web.service.client.Multiply")
    @ResponseWrapper(localName = "multiplyResponse", targetNamespace = "http://service.web/", className = "web.service.client.MultiplyResponse")
    @Action(input = "http://service.web/MathWebService/multiplyRequest", output = "http://service.web/MathWebService/multiplyResponse")
    public int multiply(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "substract", targetNamespace = "http://service.web/", className = "web.service.client.Substract")
    @ResponseWrapper(localName = "substractResponse", targetNamespace = "http://service.web/", className = "web.service.client.SubstractResponse")
    @Action(input = "http://service.web/MathWebService/substractRequest", output = "http://service.web/MathWebService/substractResponse")
    public int substract(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

}
